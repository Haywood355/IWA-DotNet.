# Example Continuous Delivery Pipeline with Fortify on Premise (SCA/SSC) and/or Fortify on Demand (FOD) support

name: InsecureWebApp-CI

trigger:
  batch: true
  branches:
    include:
    - main
    - develop
    - features/*
    - releases/*
    exclude:
    - experimental/*
  paths:
    exclude:
    - InsecureProductService/
    - InsecurePaymentService/
    - InsecureShippingService/
    - README.md
    - bin/*
    - lib/*
    - etc/*
    - media/*

pr:
  branches:
    include:
    - main
  paths:
    exclude:
    - InsecureProductService/
    - InsecurePaymentService/
    - InsecureShippingService/
    - README.md
    - bin/*
    - lib/*
    - etc/*
    - media/*
  
variables:
  #
  # In order for the Pipeline to execute successfully you should create the following variables in the Pipeline UI (or uncomment and hard-code here)
  # 
  # ADOBaseURL: 'Your Azure DevOps Base URL'
  # ADOPAT: 'Your Azure DevOps Personal Access Token'
  # ADOProject: 'IWA-DotNet'
  # AppUrl: 'URL of deployed application'
  # AzureDBServer: 'Hostname of database server'
  # AzureDBName: 'Database Name'
  # AzureDBUser: 'Database User Login'
  # AzureDBPassword: 'Database Password'
  # AzureSubscription: 'Name of Azure Subscription in Service Connections'
  # FoDApplicationName: 'IWA-DotNet'
  # FoDBaseUrl: 'https://api.ams.fortify.com'
  # FoDBugTrackerVersion: '4.2'
  # FoDClientId: 'Your FoD API Client Id'
  # FoDClientSecret: 'You FoD API Client Secret'
  # FoDParentRelease: 'main'
  # FoDReleaseId: 'Your FOD Release Id'
  # FoDUsername: 'You FoD username'
  # FoDTenant: 'Your FoD tenant'
  # ScanCentralCtrlUrl: 'Your ScanCentral Controller URL'
  # ScanCentralClientToken: 'Your ScanCentral Client Token'
  # ScanCentralNotificationEmail: 'Your Email Address'
  # ScanCentralDASTApiUrl: 'Your ScanCentral DAST API URL'
  # ScanCentralDASTCICDAuthToken: 'Your ScanCentral DAST CICD Authentication Token'
  # ScanCentralDASTCICDIdentifier: 'Your ScanCentral DAST CICD Identifier'
  # SSCUrl: 'Your SSC URL'
  # SSCApplicationName: 'IWA-DotNet'
  # SSCApplicationVersion: 'Your SSC application version'
  # SSCAuthToken: 'Your SSC CI Authentication Token'
  # ScanCentralVersion: 'The version of ScanCentral being used'
  # VsVersion: '2022'
  # VsEdition: 'Community'


  #publishProfile: 'iwanet - Web Deploy'
  
  # IMPORTANT: please make sure your names for Service Connections to FoD and/or SSC are set to the following:
  #FoDConnection: 'FODAzureDevOps' # the name of Fortify on Demand service connection configured in Project Settings
  #SSCConnection: 'SSCAzureDevOps' # the name of the Fortify SSC "generic" connection configured in Project Settings
  #AzureConnection: 'iwa-arm' # the name of the Azure Resource Manager connection

  # IMPORTANT: please ensure a Java 17x64 SDK is installed and the environment variable JAVA_HOME_17_X64 is set to its location

- name: FORTIFY_APP_NAME
  value: $(Build.Repository.Name)
- name: FORTIFY_RELEASE_NAME
  value: $[replace(variables['Build.SourceBranch'], 'refs/heads/', '')]

stages:

- stage: Init
  displayName: Initialize Environment
  pool:
    name: Fortify
  jobs:
  - job: Fortify_Init
    displayName: Get Fortify Release Id
    steps:
    - task: FcliInstaller@0
      inputs:
        version: 'latest'
    - task: PowerShell@2
      inputs:
        targetType: 'inline'
        script: |
          $App="$(FORTIFY_APP_NAME)"
          $Rel="$(FORTIFY_RELEASE_NAME)"
          if (${env:FORTIFY_APP_NAME_OVERRIDE}) {
            Write-Host "##[command]Overriding FORTIFY_APP_NAME to ${env:FORTIFY_APP_NAME_OVERRIDE}"
            Write-Host "##vso[task.setvariable variable=FORTIFY_APP_NAME]${env:FORTIFY_APP_NAME_OVERRIDE}"
            $App="${env:FORTIFY_APP_NAME_OVERRIDE}"
          } else {
            Write-Host "##[command]Using FORTIFY_APP_NAME ${App}"
          }
          if (${env:FORTIFY_RELEASE_NAME_OVERRIDE}) {
            Write-Host "##[command]Overriding FORTIFY_RELEASE_NAME to ${env:FORTIFY_RELEASE_NAME_OVERRIDE}"
            Write-Host "##vso[task.setvariable variable=FORTIFY_RELEASE_NAME]${env:FORTIFY_RELEASE_NAME_OVERRIDE}"
            $Rel=${env:FORTIFY_RELEASE_NAME_OVERRIDE}
          } else {
            Write-Host "##[command]Using FORTIFY_RELEASE_NAME ${Rel}"
          }   
          fcli fod session login --url $(FOD_API_URL) --client-id $(FOD_CLIENT_ID) --client-secret $(FOD_CLIENT_SECRET)
          $REL_ID=(fcli fod release get "${App}:${Rel}" -o "expr={releaseId}")
          Write-Host "##[command]Setting FORTIFY_RELEASE_ID to $REL_ID"
          Write-Host "##vso[task.setvariable variable=FORTIFY_RELEASE_ID]$REL_ID"
        showWarnings: true
      name: GetReleaseId
    - task: PowerShell@2
      inputs:
        targetType: 'inline'
        script: |
          Write-Host "FORTIFY_APP_NAME=$(FORTIFY_APP_NAME)"
          Write-Host "FORTIFY_RELEASE_NAME=$(FORTIFY_RELEASE_NAME)"
          Write-Host FORTIFY_RELEASE_ID=$(FORTIFY_RELEASE_ID)"

  #
  # Build and Unit Test the application components
  #
- stage: BuildAndUnitTest
  displayName: 'Build and Unit Test'
  jobs:
    # Build InsecureWebApp and run its tests
  - template: 'devops-integrations/azure-pipelines/templates/build-and-test.yml'
    parameters:
        srcProject: 'InsecureWebApp/InsecureWebApp.csproj' 
        testProject: 'InsecureWebAppTests/InsecureWebAppTests.csproj'
        pool: 'Fortify'

  #
  # Static Application Security Testing with Fortify on Demand
  #
- stage: FoD_SAST
  displayName: 'FoD SAST'
  condition: eq(variables['UseFoD'], 'true') 
  dependsOn: 
    - Init
    - BuildAndUnitTest
  jobs:
    # Run FoD SAST Scan on Project
  - template: 'devops-integrations/azure-pipelines/templates/fod-sast-scan.yml'
    parameters:
        srcDir: 'InsecureWebApp' 
        buildFile: 'InsecureWebApp.csproj'
        fodReleaseId: $[stageDependencies.Init.FortifyInit.outputs['GetReleaseId.FORTIFY_RELEASE_ID']]
        pool: 'Fortify'

  #
  # Static Application Security Testing with ScanCentral SAST (on premise)
  #
- stage: ScanCentral_SAST
  displayName: 'ScanCentral SAST'
  condition: eq(variables['UseScanCentralSAST'], 'true')
  dependsOn:
    - Init
    - BuildAndUnitTest
  jobs:
    # Run Scancentral SAST Scan on Project
  - template: 'devops-integrations/azure-pipelines/templates/scancentral-sast-scan.yml'
    parameters:
        baseDir: 'InsecureWebApp' 
        buildFile: 'InsecureWebApp.csproj'
        scanCentralCtrlUrl: $(ScanCentralCtrlUrl)
        scanCentralClientToken: $(ScanCentralClientToken)
        sscUrl: $(SSCUrl)
        sscCiToken: $(SSCAuthToken)
        sscAppName: $(SSCApplicationName)
        sscAppVerName: 'main' # $(branchName)
        notificationEmail: $(ScanCentralNotificationEmail)
        pool: 'Fortify'

  # 
  # Deploy the application - this is an example of deploying a web application and its database to Azure
  #
- stage: DeployApp
  displayName: 'Deploy Application'
  dependsOn: 
    - BuildAndUnitTest
    - ScanCentral_SAST
    - FoD_SAST
  jobs: 
    # Simulate deployment
  - template: 'devops-integrations/azure-pipelines/templates/simulate-deployment.yml'
    parameters:
        workingDirectory: 'InsecureWebApp'
        pool: 'Fortify'
    # Deploy the application - to Azure
#  - template: 'devops-integrations/azure-pipelines/templates/deploy-to-azure.yml'
#    parameters:
#        srcProject: 'InsecureWebApp/InsecureWebApp.csproj' 
#        pool: 'Fortify'

#
# Dynamic Application Security Testing with ScanCentral DAST (on-premise)
#        
- stage: ScanCentral_DAST
  displayName: 'ScanCentral DAST'
  condition: eq(variables['UseScanCentralDAST'], 'true')
  dependsOn: DeployApp
  pool:
    # use Azure DevOps provided agent
    #vmImage: 'windows-2022'
    # use local Agent pool named 'Fortify'
    name: Fortify
  jobs:
  - job: RunScan
    displayName: 'Run Scan'
    steps:   
    - task: FortifyScanCentralDAST@7
      inputs:
        scanCentralDastApiUrl: '$(ScanCentralDASTApiUrl)'
        scanCentralCiCdToken: '$(ScanCentralDASTCICDIdentifier)'
        sscCiToken: '$(ScanCentralDASTCICDAuthToken)'

  #
  # Dynamic Application Security Testing with Fortify on Demand
  #
- stage: FoD_DAST
  displayName: 'FoD DAST'
  condition: eq(variables['UseFoD'], 'true') 
  dependsOn: DeployApp
  jobs:
    # Run FoD DAST Scan on Project
  - template: 'devops-integrations/azure-pipelines/templates/fod-dast-scan.yml'
    parameters:
        fodApiKey: '${FoDClientId}' 
        fodApiSecret: '${FoDClientSecret}'
        fodReleaseId: $(FoDReleaseId)
        pool: 'Fortify'
        skip: true