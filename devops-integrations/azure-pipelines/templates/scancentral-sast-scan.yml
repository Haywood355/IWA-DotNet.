# File: templates/scancentral-sast-scan.yml

# defaults for any parameters that aren't specified
parameters: 
- name: 'pool'
  type: object
  default: {}
- name: workingDirectory
  default: ''
- name: projectFile
- name: dotnetVersion
  default: '6.x'
- name: buildConfiguration
  default: 'Debug'
- name: vsVersion
  default: '2022'
- name: vsEdition
  default: 'Community'
- name: jdkVersion
  default: '17'
- name: jdkArch
  default: 'x64'
- name: scanCentralCtrlUrl
- name: scanCentralClientToken
- name: notificationEmail
  default: ''
- name: sscUrl
- name: sscCiToken
- name: uploadToSSC
  type: boolean
  default: true
- name: sscAppName
- name: sscAppVerName
- name: sscParentAppVerName
  default: 'main'

jobs:
- job: ScanCentralStaticScan
  pool: ${{ parameters.pool }}
  steps:
  - task: UseDotNet@2
    inputs:
      version: ${{ parameters.dotnetVersion }}
  - task: JavaToolInstaller@0
    inputs:
      versionSpec: ${{ parameters.jdkVersion }}
      jdkArchitectureOption: ${{ parameters.jdkArch }}
      jdkSourceOption: PreInstalled
  - task: FcliInstaller@0
    inputs:
      version: 'latest'
  - task: PowerShell@2
    displayName: 'SSC Check AppVersion'
    inputs:
      targetType: 'inline'
      script: |
        $App="${env:FORTIFY_APP_NAME}"
        $Rel="${env:FORTIFY_RELEASE_NAME}"
        if (${env:FORTIFY_APP_NAME_OVERRIDE}) {
          Write-Host "##[debug]Overriding FORTIFY_APP_NAME to ${env:FORTIFY_APP_NAME_OVERRIDE}"
          Write-Host "##vso[task.setvariable variable=FORTIFY_APP_NAME]${env:FORTIFY_APP_NAME_OVERRIDE}"
          $App="${env:FORTIFY_APP_NAME_OVERRIDE}"
        } else {
          Write-Host "##[command]Using FORTIFY_APP_NAME ${App}"
        }
        if (${env:FORTIFY_RELEASE_NAME_OVERRIDE}) {
          Write-Host "##[debug]Overriding FORTIFY_RELEASE_NAME to ${env:FORTIFY_RELEASE_NAME_OVERRIDE}"
          Write-Host "##vso[task.setvariable variable=FORTIFY_RELEASE_NAME]${env:FORTIFY_RELEASE_NAME_OVERRIDE}"
          $Rel=${env:FORTIFY_RELEASE_NAME_OVERRIDE}
        } else {
          Write-Host "##[debug]Using FORTIFY_RELEASE_NAME ${Rel}"
        }
        Write-Host "##[command]fcli ssc session login --url ""${env:SSC_URL}"" --ci-token ""${env:SSC_CI_TOKEN}"" --session azure-pipelines"
        fcli ssc session login --url ""${env:SSC_URL}"" --ci-token ""${env:SSC_CI_TOKEN}"" --session azure-pipelines
        Write-Host "##[command]fcli ssc appversion list -q ""application.name=='${App}'"""
        fcli ssc appversion list -q "application.name=='${App}'" --session azure-pipelines
        Write-Host "##[command]fcli ssc appversion create ""${App}:${Rel}"" --description ""Created automatically from Azure DevOps"" --auto-required-attrs --skip-if-exists -o expr=""{releaseId}"" --session azure-pipelines"
        $AppVerId=(fcli ssc appver create "${App}:${Rel}" --description "Created automatically from Azure DevOps" --auto-required-attrs --skip-if-exists -o expr="{id}" --session azure-pipelines)
        Write-Host "##[debug]Setting sscAppVerId to $AppVerId"
        Write-Host "##vso[task.setvariable variable=sscAppVerId]$AppVerId"
      showWarnings: true
    env:
      SSC_URL: ${{ parameters.fodApiUrl }}
      SSC_CI_TOKEN: ${{ parameters.fodClientId }}
      FOD_CLIENT_SECRET: ${{ parameters.fodClientSecret }}
      FOD_APP_NAME: ${{ parameters.fodAppName }}
      FOD_RELEASE_NAME: ${{ parameters.fodReleaseName }}
      FOD_PARENT_RELEASE_NAME: ${{ parameters.fodParentReleaseName }}
  - task: BatchScript@1
    displayName: 'Set Visual Studio environment'
    inputs:
      filename: ${{ format('C:\Program Files\Microsoft Visual Studio\{0}\{1}\Common7\Tools\VsDevCmd.bat', parameters.vsVersion, parameters.vsEdition) }}
      modifyEnvironment: true
  - task: FortifyScanCentralSAST@7
    inputs:
      scanCentralCtrlUrl: ${{ parameters.scanCentralCtrlUrl }}
      scanCentralClientToken: ${{ parameters.scanCentralClientToken }}
      sscUrl: ${{ parameters.sscUrl }}
      sscCiToken: ${{ parameters.sscCiToken }}
      uploadToSSC: ${{ parameters.uploadToSSC }}
      applicationName: ${{ parameters.sscAppName }}
      applicationVersion: ${{ parameters.sscAppVerName }}
      buildTool: 'msbuild'
      projectFile: ${{ format('{0}\{1}', parameters.workingDirectory, parameters.projectFile) }}
      email: ${{ parameters.notificationEmail }}
      block: true
      outputFile: ${{ format('scan-{0}.fpr', parameters.workingDirectory) }}
      logFile: ${{ format('scan-{0}.log', parameters.workingDirectory) }}
      overwrite: true
  - task: PublishPipelineArtifact@1
    inputs:
      targetPath: ${{ format('scan-{0}.fpr', parameters.workingDirectory) }}
      artifact: 'Fortify Results (FPR)'
      publishLocation: 'pipeline'
  - task: PowerShell@2
    displayName: 'SSC Logout'
    inputs:
      targetType: 'inline'
      script: |
        Write-Host "##[command]fcli ssc session logout --session azure-pipelines"
        fcli ssc session logout --session azure-pipelines
